name: Build and deploy bot
on:
  workflow_dispatch:
  push:
    branches:
      - 'master'
env:
  env_var: ${{ vars.ENV_CONTEXT_VAR }}
  SERVER_PATH: /home/${{ secrets.SSH_USER }}/app/${{ github.REPOSITORY }}
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Cache modules
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: node-modules-${{ hashFiles('**/package-lock.json') }}
      - uses: actions/setup-node@v3
        with:
          node-version: 18
      - run: npm install && npm run build 

      - uses: actions/upload-artifact@v4
        with:
          name: dist
          path: |
            files
            build
            !node_modules
            ./*.*
  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist

      - name: Install SSH Key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.SSH_KEY }}
          known_hosts: unnecessary

      - name: Adding Known Hosts
        run: ssh-keyscan -p ${{ secrets.SSH_PORT }} -H ${{ secrets.SSH_HOST }}  >> ~/.ssh/known_hosts && ls

      - name: Create
        run: echo ${{ env.SERVER_PATH }}

      - name: Create
        run: ssh -p ${{ secrets.SSH_PORT }} ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} mkdir -p ${{ env.SERVER_PATH }}

      # - name: Remove
      #   run: ssh -p ${{ secrets.SSH_PORT }} ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} rm -rf ${{ env.SERVER_PATH }}

      - name: Deploy with rsync
        run: rsync -avz -e "ssh -p ${{ secrets.SSH_PORT }}" ./dist/ ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:${{ env.SERVER_PATH }}

      - name: Restart PM2
        run: ssh -p ${{ secrets.SSH_PORT }} ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "cd ${{ env.SERVER_PATH }} && npm i && pm2 start"
